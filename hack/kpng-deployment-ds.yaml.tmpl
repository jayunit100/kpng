apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    app: kpng
  name: kpng
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: kpng
  template:
    metadata:
      labels:
        app: kpng
    spec:
      # to enable progressive deployment on existing cluster you can use node labels:
      #nodeSelector:
      #  kpng: kpng

      serviceAccountName: kpng
      hostNetwork: true
      # so that kpng always runs on the controlplane nodes...
      tolerations:
      - operator: "Exists"
        effect: "NoSchedule"
      containers:
      # We'll sed-replace this with a valid kpng image at creat time
      - image: ${IMAGE}
        imagePullPolicy: ${PULL}
        name: kpng
        volumeMounts:
        - name: empty
          mountPath: /k8s
        - mountPath: /var/lib/kpng
          name: kpng-config
        args:
        - kube
        - --kubeconfig=/var/lib/kpng/kubeconfig.conf
        - to-api
        - --listen=unix:///k8s/proxy.sock
      - image: ${IMAGE}
        imagePullPolicy: ${PULL}
        name: kpng-nftables
        securityContext:
          capabilities:
           add:
           - NET_ADMIN
        volumeMounts:
        - name: empty
          mountPath: /k8s
        - name: modules
          mountPath: /lib/modules
          readOnly: true
        args: [ "local", "--api=unix:///k8s/proxy.sock", "to-${BACKEND}" ]
        #- --v=2
        #- --dry-run
      volumes:
      - name: empty
        emptyDir: {}
      - name: modules
        hostPath:
          path: /lib/modules
      - name: kpng-config
        configMap:
          name: kpng
